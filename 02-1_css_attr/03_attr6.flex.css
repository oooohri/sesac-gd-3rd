.container {
  /* ! flex 기본용어 */
  /*  주축 : main axis 
     교차축 : cross-axis */

  /* * display: flex; 는 자식 요소의 정렬 방법을 지정하는 속성 */
  /* display: inline-flex; 속성도 있음(자주 안쓰임) */

  /* ! flex와 inline-flex의 차이  */
  /* flex는 부모요소가 수직으로 쌓임 block요소처럼  */
  /* inline flex는 부모요소가 수평으로 쌓임 inline 요소처럼 */

  /* ! display: flex;는 기본적으로 자식요소들이 왼쪽에서 오른쪽으로 쌓임 */
  /* 즉, 주축의 기본 방향이 좌->우 */

  display: flex;
  width: 100vw;

  background-color: antiquewhite;
  /* * flex-direction : 주축의 방향 지정 / 시작점 변경 */
  /* flex-direction : row; (default) */

  /* row-reverse: 우->좌로 자식 요소들이 쌓임 */
  /* flex-direction: row-reverse; */
  /* column : 위->아래로 자식 요소들이 쌓임 */
  /* flex-direction: column; */
  /* column-reverse : 아래->위로 자식 요소들이 쌓임 */
  /* flex-direction: column-reverse; */
  /* flex-direction: row; */
  /* height: 300px; */

  /* * flex-wrap : nowrap l wrap L wrap-reverse
  flex 속성 사용 시 컨테이너의 줄바꿈을 지정 */
  /* width: 350px; */
  /* flex-wrap: nowrap; (default)  */
  /* 100px을 유지하면서 줄바꿈한다. */
  /* flex-wrap: wrap; */
  /* 줄바꿈 된 것이 위로 쌓인다. */
  /* flex-wrap: wrap-reverse; */
  /* height :300px 하면 flex:colum일때, flex-wrap이 줄바꿈 된다. */

  /*  * justify-content : 주축 item의 정렬 방법 / 배치 방법 */
  /*
        - justify-content : flex-start(default) -> 아이템을 start지점을 기준으로 나열
        - justify-content : flex-end -> 아이템을 end 지점을 기준으로 나열
        - justify-content : space-around -> 아이템들의 모든 여백을 동일하게 갖도록 함
        (양끝 여백의 단위가 1이라면, item 사이 여백은 2)
        - justify-content : space-evenly -> start부터 첫 아이템의 간격,
                                            아이템사이 간격, 마지막 아이템부터 end까지의 
                                            모든 간격이 동일
        - justify-content ; space-between -> 처음과 마지막 아이템을 양 끝에 붙이고,
                                             나머지 아이템 사이 간격을 동일하게 나눔
        */
  /* flex-direction: column; */
  /* height: 100vh; */
  /* ! 요소가 배경을 모두 차지하면 간격 적용시키는 justify 적용안됨 */
  /* justify-content: flex-end;
  justify-content: space-around;
  justify-content: space-between; */
  /* width: 500px; */

  /* * align-items : 교차축을 기준으로 item을 어떻게 배치할 것인가 */
  /* 
    - align-items : strech; (default)  -> container의 교차축을 모두 채우기 위해 늘림
     -> 아이템의 높이/너비가 지정되지 않았을 때 자동으로 교차축을 채우기 위해 늘어남
    - align-items; : flex-start; -> 교차축의 시작점으로 정렬
     -> 아이템의 높이/너비가 지정되었을 때 자동으로 정렬됨
    - align-items; : flex-end -> 교차축의 끝점으로 정렬
    - align-items; : center; -> 교차축의 중앙에 정렬
    - align-itmes; : baseline; -> 아이템을 텍스트의 베이스라인 기준으로 정렬   
     -> 숫자 정렬했을때 숫자의 밑 라인 기준으로 정렬된다. (자주사용x) 
  */
  /* height: 300px;
  align-items: baseline; */

  /* * align-content -> 두 줄 이상에서 교차축 기준으로 아이템들의 정렬 방식 (뭉쳐짐) */
  /* 조건 : flex-wrap : wrap 상태에서 아이템이 2줄 이상일 때 교차축 방향 설정 */
  /* 
    - align-content : strech; (default) -> 교차축 방향으로 모두 차지하기 위해 늘어남
    - align-contnet : flex-start -> 교차축 방향으로 시작점으로 정렬
    - align-content : flex-end -> 교차축 방향으로 끝점으로 정렬
    - align-content : center -> 교차축 방향으로 중앙 정렬
  */
  /* ! 컨테이너의 너비가 있어야 wrap이 적용된다. */
  width: 350px;
  height: 500px;
  flex-wrap: wrap;
  align-content: flex-start;
}

.container .item {
  width: 100px;
  height: 100px;
  font-size: 30px;
  text-align: center;
  line-height: 100px;
}

.container .item1 {
  /* font-size: 20px; */
  background-color: red;
}
.container .item2 {
  /* font-size: 40px; */
  background-color: orange;
}
.container .item3 {
  background-color: blue;
}
.container .item4 {
  background-color: yellow;
}
.container .item5 {
  background-color: green;
}

/* 아이템 속성 */
.container2 {
  background-color: #dfdfdf;
  /* width:100% -> 부모요소 100퍼 차지하겠다 (body가 부모) */
  width: 100%;
  height: 400px;
  display: flex;
  align-items: center;
}

.container2 .item {
  /* width: 50px; */
  height: 50px;
}

.container2 .item1 {
  background-color: coral;
  order: 5;
}

.container2 .item2 {
  background-color: lightsalmon;
  /* align-self: 혼자 교차적 기준으로 올라간다 */
  align-self: flex-start;
}
.container2 .item3 {
  background-color: lightgoldenrodyellow;
  flex-basis: 100px;
}
.container2 .item4 {
  background-color: lightgreen;
  /* 3분의 1 차지 */
  flex-grow: 1;
}
.container2 .item5 {
  background-color: lightblue;
  order: 1;
  /* 3분의 2 차지 */
  flex-grow: 2;
}
