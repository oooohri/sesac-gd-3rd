.box {
  width: 100px;
  height: 100px;
  background-color: pink;
  position: relative;

  /* animation 사용 */
  animation-name: my-ani;
  animation-duration: 5s;
  animation-delay: 0.5s;
  animation-iteration-count: 2;
  animation-timing-function: linear;
}

@keyframes my-ani {
  0% {
    left: 0;
  }
  25% {
    left: 200px;
  }
  50% {
    left: 400px;
  }
  75% {
    left: 200px;
  }
  100% {
    left: 0;
  }
}

.bounce-ball1 {
  width: 100px;
  height: 100px;
  position: relative;
  left: 100px;
  top: 0;
  border-radius: 50%;
  background-color: beige;
  /* animation-name: bounce1;
  animation-duration: 1s;
  animation-timing-function: ease-in;
  animation-iteration-count: infinite;
  animation-direction : alternate; -> 애니메이션이 더 자연스럽게 연결될 수 있도록 함
  */
  /*  단축 프로퍼티 */
  /* animation: name duration timing-function delay iteration-count direction fill-mode; */
  animation: bounce1 1s ease-in infinite alternate;
}

@keyframes bounce1 {
  to {
    top: 0px;
  }
  from {
    top: 300px;
  }
}

.bounce-ball2 {
  width: 50px;
  height: 50px;
  background-color: coral;
  position: absolute;
  border-radius: 50%;
  /* 이 세가지가 필수 값 */
  animation: bounce2 2s infinite;
}
@keyframes bounce2 {
  /* alternate 속성을 주지 않아도 왔다갔다 하므로 자연스럽다. */
  from,
  to {
    width: 60px;
    bottom: 0;
    /* 0px에서 정상속도로 시작해, 천천히 속도를 줄이면서 300px이 됨 */
    animation-timing-function: ease-out;
  }

  50% {
    width: 100px;
    bottom: 300px;
    /* 300px에서 천천히 시작해, 0px로 가면서 정상속도로 끝남 */
    animation-timing-function: ease-in;
  }
}
